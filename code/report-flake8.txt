.\oblate_ellipsoid_old.py:8:1: F401 '..constants.SI2MGAL' imported but unused
from ..constants import SI2MGAL, G, CM, T2NT, SI2EOTVOS
^
.\oblate_ellipsoid_old.py:8:1: F401 '..constants.G' imported but unused
from ..constants import SI2MGAL, G, CM, T2NT, SI2EOTVOS
^
.\oblate_ellipsoid_old.py:8:1: F401 '..constants.SI2EOTVOS' imported but unused
from ..constants import SI2MGAL, G, CM, T2NT, SI2EOTVOS
^
.\plot_functions.py:1:1: F401 'mpl_toolkits.mplot3d.axes3d' imported but unused
from mpl_toolkits.mplot3d import axes3d
^
.\plot_functions.py:2:1: F401 'matplotlib.pyplot as plt' imported but unused
import matplotlib.pyplot as plt
^
.\plot_functions.py:5:1: E302 expected 2 blank lines, found 1
def draw_main_system(ax, length_axes = 1., label_size = 22, elev=200, azim=-20):
^
.\plot_functions.py:5:37: E251 unexpected spaces around keyword / parameter equals
def draw_main_system(ax, length_axes = 1., label_size = 22, elev=200, azim=-20):
                                    ^
.\plot_functions.py:5:39: E251 unexpected spaces around keyword / parameter equals
def draw_main_system(ax, length_axes = 1., label_size = 22, elev=200, azim=-20):
                                      ^
.\plot_functions.py:5:54: E251 unexpected spaces around keyword / parameter equals
def draw_main_system(ax, length_axes = 1., label_size = 22, elev=200, azim=-20):
                                                     ^
.\plot_functions.py:5:56: E251 unexpected spaces around keyword / parameter equals
def draw_main_system(ax, length_axes = 1., label_size = 22, elev=200, azim=-20):
                                                       ^
.\plot_functions.py:5:80: E501 line too long (80 > 79 characters)
def draw_main_system(ax, length_axes = 1., label_size = 22, elev=200, azim=-20):
                                                                               ^
.\plot_functions.py:8:1: W293 blank line contains whitespace
    '''
    Plot the axes forming the main coordinate system.
    
    input
    ax: axes of a matplotlib figure.
    length_axes: float - length of the axes (in meters).
        Default is 1.
    label_size: float - size of the label font. Default is 22.
    elev and azim: floats - parameters controlling the view
        of the figure. Default is 200 and -20, respectively.
        
    output
    matplotlib objects
    '''
^
.\plot_functions.py:16:1: W293 blank line contains whitespace
    '''
    Plot the axes forming the main coordinate system.
    
    input
    ax: axes of a matplotlib figure.
    length_axes: float - length of the axes (in meters).
        Default is 1.
    label_size: float - size of the label font. Default is 22.
    elev and azim: floats - parameters controlling the view
        of the figure. Default is 200 and -20, respectively.
        
    output
    matplotlib objects
    '''
^
.\plot_functions.py:22:56: W291 trailing whitespace
    ax.quiver(length_axes, 0., 0., length_axes, 0., 0., 
                                                       ^
.\plot_functions.py:23:21: E251 unexpected spaces around keyword / parameter equals
              length = length_axes, color='k', linewidth=2.0, linestyle='-',
                    ^
.\plot_functions.py:23:23: E251 unexpected spaces around keyword / parameter equals
              length = length_axes, color='k', linewidth=2.0, linestyle='-',
                      ^
.\plot_functions.py:28:56: W291 trailing whitespace
    ax.quiver(0., length_axes, 0., 0., length_axes, 0., 
                                                       ^
.\plot_functions.py:29:21: E251 unexpected spaces around keyword / parameter equals
              length = length_axes, color='k', linewidth=2.0, linestyle='-',
                    ^
.\plot_functions.py:29:23: E251 unexpected spaces around keyword / parameter equals
              length = length_axes, color='k', linewidth=2.0, linestyle='-',
                      ^
.\plot_functions.py:34:56: W291 trailing whitespace
    ax.quiver(0., 0., length_axes, 0., 0., length_axes, 
                                                       ^
.\plot_functions.py:35:21: E251 unexpected spaces around keyword / parameter equals
              length = length_axes, color='k', linewidth=2.0, linestyle='-',
                    ^
.\plot_functions.py:35:23: E251 unexpected spaces around keyword / parameter equals
              length = length_axes, color='k', linewidth=2.0, linestyle='-',
                      ^
.\plot_functions.py:41:5: E265 block comment should start with '# '
    #ax.set_xlim(0., 1.1)
    ^
.\plot_functions.py:42:5: E265 block comment should start with '# '
    #ax.set_ylim(0., 1.1)
    ^
.\plot_functions.py:43:5: E265 block comment should start with '# '
    #ax.set_zlim(0., 1.1)
    ^
.\plot_functions.py:46:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:47:1: E302 expected 2 blank lines, found 1
def draw_ellipsoid(ax, xc, yc, zc, a, b, c, strike, dip, rake,
^
.\plot_functions.py:49:49: E231 missing whitespace after ','
                   plot_axes=True, axes_color=(0,0,0), label_size=16):
                                                ^
.\plot_functions.py:49:51: E231 missing whitespace after ','
                   plot_axes=True, axes_color=(0,0,0), label_size=16):
                                                  ^
.\plot_functions.py:53:1: W293 blank line contains whitespace
    '''
    Plot an ellipsoidal body with axes a, b, c and
    origin at (xc, yc, zc).
    
    input
    ax: axes of a matplotlib figure.
    xc: float - Cartesian coordinate x (in meters) of the origin
        referred to the main system.
    yc: float - Cartesian coordinate y (in meters) of the origin
        referred to the main system.
    zc: float - Cartesian coordinate z (in meters) of the origin
        referred to the main system.
    a: float - axis a (in meters)
    b: float - axis b (in meters)
    c: float - axis c (in meters)
    strike: float - angle strike (in degrees)
    dip: float - angle dip (in degrees)
    rake: float - angle rake (in degrees)
    u: None or numpy array 1D - angular spherical 
        coordinates (in radians) for plotting the ellipsoidal surface.
    v: None or numpy array 1D - angular spherical 
        coordinates (in radians) for plotting the ellipsoidal surface.
    body_color: RGB matplotlib tuple - color of the body.
    body_alpha: float - transparency of the body.
    plot_axes: boolean - If True (default), plot the body axes.
    axes_color: RGB matplotlib tuple - color of the axes. The default
        is (0,0,0) - black color.
    label_size: float - size of the label font. Default is 22.
    
    output
    matplotlib objects
    '''
^
.\plot_functions.py:68:50: W291 trailing whitespace
    '''
    Plot an ellipsoidal body with axes a, b, c and
    origin at (xc, yc, zc).
    
    input
    ax: axes of a matplotlib figure.
    xc: float - Cartesian coordinate x (in meters) of the origin
        referred to the main system.
    yc: float - Cartesian coordinate y (in meters) of the origin
        referred to the main system.
    zc: float - Cartesian coordinate z (in meters) of the origin
        referred to the main system.
    a: float - axis a (in meters)
    b: float - axis b (in meters)
    c: float - axis c (in meters)
    strike: float - angle strike (in degrees)
    dip: float - angle dip (in degrees)
    rake: float - angle rake (in degrees)
    u: None or numpy array 1D - angular spherical 
        coordinates (in radians) for plotting the ellipsoidal surface.
    v: None or numpy array 1D - angular spherical 
        coordinates (in radians) for plotting the ellipsoidal surface.
    body_color: RGB matplotlib tuple - color of the body.
    body_alpha: float - transparency of the body.
    plot_axes: boolean - If True (default), plot the body axes.
    axes_color: RGB matplotlib tuple - color of the axes. The default
        is (0,0,0) - black color.
    label_size: float - size of the label font. Default is 22.
    
    output
    matplotlib objects
    '''
                                                 ^
.\plot_functions.py:70:50: W291 trailing whitespace
    '''
    Plot an ellipsoidal body with axes a, b, c and
    origin at (xc, yc, zc).
    
    input
    ax: axes of a matplotlib figure.
    xc: float - Cartesian coordinate x (in meters) of the origin
        referred to the main system.
    yc: float - Cartesian coordinate y (in meters) of the origin
        referred to the main system.
    zc: float - Cartesian coordinate z (in meters) of the origin
        referred to the main system.
    a: float - axis a (in meters)
    b: float - axis b (in meters)
    c: float - axis c (in meters)
    strike: float - angle strike (in degrees)
    dip: float - angle dip (in degrees)
    rake: float - angle rake (in degrees)
    u: None or numpy array 1D - angular spherical 
        coordinates (in radians) for plotting the ellipsoidal surface.
    v: None or numpy array 1D - angular spherical 
        coordinates (in radians) for plotting the ellipsoidal surface.
    body_color: RGB matplotlib tuple - color of the body.
    body_alpha: float - transparency of the body.
    plot_axes: boolean - If True (default), plot the body axes.
    axes_color: RGB matplotlib tuple - color of the axes. The default
        is (0,0,0) - black color.
    label_size: float - size of the label font. Default is 22.
    
    output
    matplotlib objects
    '''
                                                 ^
.\plot_functions.py:78:1: W293 blank line contains whitespace
    '''
    Plot an ellipsoidal body with axes a, b, c and
    origin at (xc, yc, zc).
    
    input
    ax: axes of a matplotlib figure.
    xc: float - Cartesian coordinate x (in meters) of the origin
        referred to the main system.
    yc: float - Cartesian coordinate y (in meters) of the origin
        referred to the main system.
    zc: float - Cartesian coordinate z (in meters) of the origin
        referred to the main system.
    a: float - axis a (in meters)
    b: float - axis b (in meters)
    c: float - axis c (in meters)
    strike: float - angle strike (in degrees)
    dip: float - angle dip (in degrees)
    rake: float - angle rake (in degrees)
    u: None or numpy array 1D - angular spherical 
        coordinates (in radians) for plotting the ellipsoidal surface.
    v: None or numpy array 1D - angular spherical 
        coordinates (in radians) for plotting the ellipsoidal surface.
    body_color: RGB matplotlib tuple - color of the body.
    body_alpha: float - transparency of the body.
    plot_axes: boolean - If True (default), plot the body axes.
    axes_color: RGB matplotlib tuple - color of the axes. The default
        is (0,0,0) - black color.
    label_size: float - size of the label font. Default is 22.
    
    output
    matplotlib objects
    '''
^
.\plot_functions.py:84:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:87:1: W293 blank line contains whitespace
        
^
.\plot_functions.py:90:1: W293 blank line contains whitespace
        
^
.\plot_functions.py:93:1: W293 blank line contains whitespace
        
^
.\plot_functions.py:96:1: W293 blank line contains whitespace
        
^
.\plot_functions.py:98:1: W293 blank line contains whitespace
        
^
.\plot_functions.py:99:25: E231 missing whitespace after ','
        ax.quiver(xc+V[0,0]*a, yc+V[1,0]*a, zc+V[2,0]*a, V[0,0], V[1,0], V[2,0],
                        ^
.\plot_functions.py:99:38: E231 missing whitespace after ','
        ax.quiver(xc+V[0,0]*a, yc+V[1,0]*a, zc+V[2,0]*a, V[0,0], V[1,0], V[2,0],
                                     ^
.\plot_functions.py:99:51: E231 missing whitespace after ','
        ax.quiver(xc+V[0,0]*a, yc+V[1,0]*a, zc+V[2,0]*a, V[0,0], V[1,0], V[2,0],
                                                  ^
.\plot_functions.py:99:61: E231 missing whitespace after ','
        ax.quiver(xc+V[0,0]*a, yc+V[1,0]*a, zc+V[2,0]*a, V[0,0], V[1,0], V[2,0],
                                                            ^
.\plot_functions.py:99:69: E231 missing whitespace after ','
        ax.quiver(xc+V[0,0]*a, yc+V[1,0]*a, zc+V[2,0]*a, V[0,0], V[1,0], V[2,0],
                                                                    ^
.\plot_functions.py:99:77: E231 missing whitespace after ','
        ax.quiver(xc+V[0,0]*a, yc+V[1,0]*a, zc+V[2,0]*a, V[0,0], V[1,0], V[2,0],
                                                                            ^
.\plot_functions.py:99:80: E501 line too long (80 > 79 characters)
        ax.quiver(xc+V[0,0]*a, yc+V[1,0]*a, zc+V[2,0]*a, V[0,0], V[1,0], V[2,0],
                                                                               ^
.\plot_functions.py:102:23: E231 missing whitespace after ','
        ax.text(xc+V[0,0]*a*1.05, yc+V[1,0]*a*1.05, zc+V[2,0]*a*1.05, 
                      ^
.\plot_functions.py:102:41: E231 missing whitespace after ','
        ax.text(xc+V[0,0]*a*1.05, yc+V[1,0]*a*1.05, zc+V[2,0]*a*1.05, 
                                        ^
.\plot_functions.py:102:59: E231 missing whitespace after ','
        ax.text(xc+V[0,0]*a*1.05, yc+V[1,0]*a*1.05, zc+V[2,0]*a*1.05, 
                                                          ^
.\plot_functions.py:102:70: W291 trailing whitespace
        ax.text(xc+V[0,0]*a*1.05, yc+V[1,0]*a*1.05, zc+V[2,0]*a*1.05, 
                                                                     ^
.\plot_functions.py:103:80: E501 line too long (82 > 79 characters)
                '$a \hat{\mathbf{v}}_{1}$', color=axes_color, fontsize=label_size)
                                                                               ^
.\plot_functions.py:105:25: E231 missing whitespace after ','
        ax.quiver(xc+V[0,1]*b, yc+V[1,1]*b, zc+V[2,1]*b, V[0,1], V[1,1], V[2,1],
                        ^
.\plot_functions.py:105:38: E231 missing whitespace after ','
        ax.quiver(xc+V[0,1]*b, yc+V[1,1]*b, zc+V[2,1]*b, V[0,1], V[1,1], V[2,1],
                                     ^
.\plot_functions.py:105:51: E231 missing whitespace after ','
        ax.quiver(xc+V[0,1]*b, yc+V[1,1]*b, zc+V[2,1]*b, V[0,1], V[1,1], V[2,1],
                                                  ^
.\plot_functions.py:105:61: E231 missing whitespace after ','
        ax.quiver(xc+V[0,1]*b, yc+V[1,1]*b, zc+V[2,1]*b, V[0,1], V[1,1], V[2,1],
                                                            ^
.\plot_functions.py:105:69: E231 missing whitespace after ','
        ax.quiver(xc+V[0,1]*b, yc+V[1,1]*b, zc+V[2,1]*b, V[0,1], V[1,1], V[2,1],
                                                                    ^
.\plot_functions.py:105:77: E231 missing whitespace after ','
        ax.quiver(xc+V[0,1]*b, yc+V[1,1]*b, zc+V[2,1]*b, V[0,1], V[1,1], V[2,1],
                                                                            ^
.\plot_functions.py:105:80: E501 line too long (80 > 79 characters)
        ax.quiver(xc+V[0,1]*b, yc+V[1,1]*b, zc+V[2,1]*b, V[0,1], V[1,1], V[2,1],
                                                                               ^
.\plot_functions.py:108:23: E231 missing whitespace after ','
        ax.text(xc+V[0,1]*b*1.05, yc+V[1,1]*b*1.05, zc+V[2,1]*b*1.05, 
                      ^
.\plot_functions.py:108:41: E231 missing whitespace after ','
        ax.text(xc+V[0,1]*b*1.05, yc+V[1,1]*b*1.05, zc+V[2,1]*b*1.05, 
                                        ^
.\plot_functions.py:108:59: E231 missing whitespace after ','
        ax.text(xc+V[0,1]*b*1.05, yc+V[1,1]*b*1.05, zc+V[2,1]*b*1.05, 
                                                          ^
.\plot_functions.py:108:70: W291 trailing whitespace
        ax.text(xc+V[0,1]*b*1.05, yc+V[1,1]*b*1.05, zc+V[2,1]*b*1.05, 
                                                                     ^
.\plot_functions.py:109:80: E501 line too long (82 > 79 characters)
                '$b \hat{\mathbf{v}}_{2}$', color=axes_color, fontsize=label_size)
                                                                               ^
.\plot_functions.py:111:25: E231 missing whitespace after ','
        ax.quiver(xc+V[0,2]*c, yc+V[1,2]*c, zc+V[2,2]*c, V[0,2], V[1,2], V[2,2],
                        ^
.\plot_functions.py:111:38: E231 missing whitespace after ','
        ax.quiver(xc+V[0,2]*c, yc+V[1,2]*c, zc+V[2,2]*c, V[0,2], V[1,2], V[2,2],
                                     ^
.\plot_functions.py:111:51: E231 missing whitespace after ','
        ax.quiver(xc+V[0,2]*c, yc+V[1,2]*c, zc+V[2,2]*c, V[0,2], V[1,2], V[2,2],
                                                  ^
.\plot_functions.py:111:61: E231 missing whitespace after ','
        ax.quiver(xc+V[0,2]*c, yc+V[1,2]*c, zc+V[2,2]*c, V[0,2], V[1,2], V[2,2],
                                                            ^
.\plot_functions.py:111:69: E231 missing whitespace after ','
        ax.quiver(xc+V[0,2]*c, yc+V[1,2]*c, zc+V[2,2]*c, V[0,2], V[1,2], V[2,2],
                                                                    ^
.\plot_functions.py:111:77: E231 missing whitespace after ','
        ax.quiver(xc+V[0,2]*c, yc+V[1,2]*c, zc+V[2,2]*c, V[0,2], V[1,2], V[2,2],
                                                                            ^
.\plot_functions.py:111:80: E501 line too long (80 > 79 characters)
        ax.quiver(xc+V[0,2]*c, yc+V[1,2]*c, zc+V[2,2]*c, V[0,2], V[1,2], V[2,2],
                                                                               ^
.\plot_functions.py:114:23: E231 missing whitespace after ','
        ax.text(xc+V[0,2]*c*1.05, yc+V[1,2]*c*1.05, zc+V[2,2]*c*1.05, 
                      ^
.\plot_functions.py:114:41: E231 missing whitespace after ','
        ax.text(xc+V[0,2]*c*1.05, yc+V[1,2]*c*1.05, zc+V[2,2]*c*1.05, 
                                        ^
.\plot_functions.py:114:59: E231 missing whitespace after ','
        ax.text(xc+V[0,2]*c*1.05, yc+V[1,2]*c*1.05, zc+V[2,2]*c*1.05, 
                                                          ^
.\plot_functions.py:114:70: W291 trailing whitespace
        ax.text(xc+V[0,2]*c*1.05, yc+V[1,2]*c*1.05, zc+V[2,2]*c*1.05, 
                                                                     ^
.\plot_functions.py:115:80: E501 line too long (82 > 79 characters)
                '$c \hat{\mathbf{v}}_{3}$', color=axes_color, fontsize=label_size)
                                                                               ^
.\plot_functions.py:116:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:118:5: E303 too many blank lines (2)
    if (u is not None) and (v is not None):
    ^
.\plot_functions.py:119:1: W293 blank line contains whitespace
        
^
.\plot_functions.py:127:16: E231 missing whitespace after ','
        x = V[0,0]*x1 + V[0,1]*x2 + V[0,2]*x3 + xc
               ^
.\plot_functions.py:127:28: E231 missing whitespace after ','
        x = V[0,0]*x1 + V[0,1]*x2 + V[0,2]*x3 + xc
                           ^
.\plot_functions.py:127:40: E231 missing whitespace after ','
        x = V[0,0]*x1 + V[0,1]*x2 + V[0,2]*x3 + xc
                                       ^
.\plot_functions.py:128:16: E231 missing whitespace after ','
        y = V[1,0]*x1 + V[1,1]*x2 + V[1,2]*x3 + yc
               ^
.\plot_functions.py:128:28: E231 missing whitespace after ','
        y = V[1,0]*x1 + V[1,1]*x2 + V[1,2]*x3 + yc
                           ^
.\plot_functions.py:128:40: E231 missing whitespace after ','
        y = V[1,0]*x1 + V[1,1]*x2 + V[1,2]*x3 + yc
                                       ^
.\plot_functions.py:129:16: E231 missing whitespace after ','
        z = V[2,0]*x1 + V[2,1]*x2 + V[2,2]*x3 + zc
               ^
.\plot_functions.py:129:28: E231 missing whitespace after ','
        z = V[2,0]*x1 + V[2,1]*x2 + V[2,2]*x3 + zc
                           ^
.\plot_functions.py:129:40: E231 missing whitespace after ','
        z = V[2,0]*x1 + V[2,1]*x2 + V[2,2]*x3 + zc
                                       ^
.\plot_functions.py:132:80: E501 line too long (82 > 79 characters)
        ax.plot_surface(x, y, z, linewidth=0., color=body_color, alpha=body_alpha)
                                                                               ^
.\plot_functions.py:133:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:134:1: E302 expected 2 blank lines, found 1
def V_triaxial(alpha, gamma, delta):
^
.\plot_functions.py:138:1: W293 blank line contains whitespace
    '''
    Calculates the coordinate transformation matrix
    for a triaxial model.
    
    input
    alpha: float - angle alpha (in radians)
    gamma: float - angle gamma (in radians)
    delta: float - angle delta (in radians)
    
    output
    V: numpy array 2D - coordinate transformation matrix
    '''
^
.\plot_functions.py:143:1: W293 blank line contains whitespace
    '''
    Calculates the coordinate transformation matrix
    for a triaxial model.
    
    input
    alpha: float - angle alpha (in radians)
    gamma: float - angle gamma (in radians)
    delta: float - angle delta (in radians)
    
    output
    V: numpy array 2D - coordinate transformation matrix
    '''
^
.\plot_functions.py:157:41: W291 trailing whitespace
    v1 = np.array([-cos_alpha*cos_delta, 
                                        ^
.\plot_functions.py:158:41: W291 trailing whitespace
                   -sin_alpha*cos_delta, 
                                        ^
.\plot_functions.py:161:20: E201 whitespace after '['
    v2 = np.array([ cos_alpha*cos_gamma*sin_delta + sin_alpha*sin_gamma,
                   ^
.\plot_functions.py:163:20: E128 continuation line under-indented for visual indent
                   -cos_gamma*cos_delta])
                   ^
.\plot_functions.py:165:20: E201 whitespace after '['
    v3 = np.array([ sin_alpha*cos_gamma - cos_alpha*sin_gamma*sin_delta,
                   ^
.\plot_functions.py:166:20: E128 continuation line under-indented for visual indent
                   -cos_alpha*cos_gamma - sin_alpha*sin_gamma*sin_delta,
                   ^
.\plot_functions.py:168:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:170:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:172:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:173:1: E302 expected 2 blank lines, found 1
def V_prolate(alpha, gamma, delta):
^
.\plot_functions.py:177:1: W293 blank line contains whitespace
    '''
    Calculates the coordinate transformation matrix
    for a prolate model.
    
    input
    alpha: float - angle alpha (in radians)
    gamma: float - angle gamma (in radians)
    delta: float - angle delta (in radians)
    
    output
    V: numpy array 2D - coordinate transformation matrix
    '''
^
.\plot_functions.py:182:1: W293 blank line contains whitespace
    '''
    Calculates the coordinate transformation matrix
    for a prolate model.
    
    input
    alpha: float - angle alpha (in radians)
    gamma: float - angle gamma (in radians)
    delta: float - angle delta (in radians)
    
    output
    V: numpy array 2D - coordinate transformation matrix
    '''
^
.\plot_functions.py:196:41: W291 trailing whitespace
    v1 = np.array([-cos_alpha*cos_delta, 
                                        ^
.\plot_functions.py:197:41: W291 trailing whitespace
                   -sin_alpha*cos_delta, 
                                        ^
.\plot_functions.py:200:20: E201 whitespace after '['
    v2 = np.array([ cos_alpha*cos_gamma*sin_delta + sin_alpha*sin_gamma,
                   ^
.\plot_functions.py:202:20: E128 continuation line under-indented for visual indent
                   -cos_gamma*cos_delta])
                   ^
.\plot_functions.py:204:20: E201 whitespace after '['
    v3 = np.array([ sin_alpha*cos_gamma - cos_alpha*sin_gamma*sin_delta,
                   ^
.\plot_functions.py:205:20: E128 continuation line under-indented for visual indent
                   -cos_alpha*cos_gamma - sin_alpha*sin_gamma*sin_delta,
                   ^
.\plot_functions.py:207:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:209:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:211:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:212:1: E302 expected 2 blank lines, found 1
def V_oblate(alpha, gamma, delta):
^
.\plot_functions.py:216:1: W293 blank line contains whitespace
    '''
    Calculates the coordinate transformation matrix
    for an oblate model.
    
    input
    alpha: float - angle alpha (in radians)
    gamma: float - angle gamma (in radians)
    delta: float - angle delta (in radians)
    
    output
    V: numpy array 2D - coordinate transformation matrix
    '''
^
.\plot_functions.py:221:1: W293 blank line contains whitespace
    '''
    Calculates the coordinate transformation matrix
    for an oblate model.
    
    input
    alpha: float - angle alpha (in radians)
    gamma: float - angle gamma (in radians)
    delta: float - angle delta (in radians)
    
    output
    V: numpy array 2D - coordinate transformation matrix
    '''
^
.\plot_functions.py:239:41: W291 trailing whitespace
    v2 = np.array([-cos_alpha*cos_delta, 
                                        ^
.\plot_functions.py:240:41: W291 trailing whitespace
                   -sin_alpha*cos_delta, 
                                        ^
.\plot_functions.py:246:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:248:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:258:1: W293 blank line contains whitespace
    '''
    Calculates the angles that describe how a line is
    positioned in space according to structural geology.
    The computation is defined acording to Clark (1986)
    and Allmendinger et al. (2012).
    
    input:
    strike: float - angle strike (in degrees)
    dip: float - angle dip (in degrees)
    rake: float - angle rake (in degrees)

    output:
    alpha: float - angle alpha (in radians)
    gamma: float - angle gamma (in radians)
    delta: float - angle delta (in radians)
    
    References:

    Allmendinger, R., Cardozo, N., and Fisher, D. M.:
    Structural geology algorithms : vectors and tensors,
    Cambridge University Press, 2012.

    Clark, D., Saul, S., and Emerson, D.: Magnetic and
    gravity anomalies of a triaxial ellipsoid, Exploration
    Geophysics, 17, 189-200, 1986.
    '''
^
.\plot_functions.py:268:1: W293 blank line contains whitespace
    '''
    Calculates the angles that describe how a line is
    positioned in space according to structural geology.
    The computation is defined acording to Clark (1986)
    and Allmendinger et al. (2012).
    
    input:
    strike: float - angle strike (in degrees)
    dip: float - angle dip (in degrees)
    rake: float - angle rake (in degrees)

    output:
    alpha: float - angle alpha (in radians)
    gamma: float - angle gamma (in radians)
    delta: float - angle delta (in radians)
    
    References:

    Allmendinger, R., Cardozo, N., and Fisher, D. M.:
    Structural geology algorithms : vectors and tensors,
    Cambridge University Press, 2012.

    Clark, D., Saul, S., and Emerson, D.: Magnetic and
    gravity anomalies of a triaxial ellipsoid, Exploration
    Geophysics, 17, 189-200, 1986.
    '''
^
.\plot_functions.py:288:1: W293 blank line contains whitespace
    
^
.\plot_functions.py:297:1: W293 blank line contains whitespace
    
^
.\prolate_ellipsoid_old.py:8:1: F401 '..constants.SI2MGAL' imported but unused
from ..constants import SI2MGAL, G, CM, T2NT, SI2EOTVOS
^
.\prolate_ellipsoid_old.py:8:1: F401 '..constants.G' imported but unused
from ..constants import SI2MGAL, G, CM, T2NT, SI2EOTVOS
^
.\prolate_ellipsoid_old.py:8:1: F401 '..constants.SI2EOTVOS' imported but unused
from ..constants import SI2MGAL, G, CM, T2NT, SI2EOTVOS
^
.\test_oblate_ellipsoid.py:130:5: F841 local variable 'dlamb_dx' is assigned to but never used
    dlamb_dx = oblate_ellipsoid._dlamb(x1, x2, x3, a, b, lamb,
    ^
.\test_oblate_ellipsoid.py:132:5: F841 local variable 'dlamb_dy' is assigned to but never used
    dlamb_dy = oblate_ellipsoid._dlamb(x1, x2, x3, a, b, lamb,
    ^
.\test_oblate_ellipsoid.py:134:5: F841 local variable 'dlamb_dz' is assigned to but never used
    dlamb_dz = oblate_ellipsoid._dlamb(x1, x2, x3, a, b, lamb,
    ^
.\test_oblate_ellipsoid.py:192:5: F841 local variable 'matrix' is assigned to but never used
    matrix = oblate_ellipsoid.V(alpha, gamma, delta)
    ^
.\test_oblate_ellipsoid.py:230:5: F841 local variable 'pi' is assigned to but never used
    pi = np.pi
    ^
.\test_prolate_ellipsoid.py:130:5: F841 local variable 'dlamb_dx' is assigned to but never used
    dlamb_dx = prolate_ellipsoid._dlamb(x1, x2, x3, a, b, lamb,
    ^
.\test_prolate_ellipsoid.py:132:5: F841 local variable 'dlamb_dy' is assigned to but never used
    dlamb_dy = prolate_ellipsoid._dlamb(x1, x2, x3, a, b, lamb,
    ^
.\test_prolate_ellipsoid.py:134:5: F841 local variable 'dlamb_dz' is assigned to but never used
    dlamb_dz = prolate_ellipsoid._dlamb(x1, x2, x3, a, b, lamb,
    ^
.\test_prolate_ellipsoid.py:192:5: F841 local variable 'matrix' is assigned to but never used
    matrix = prolate_ellipsoid.V(alpha, gamma, delta)
    ^
.\test_prolate_ellipsoid.py:230:5: F841 local variable 'pi' is assigned to but never used
    pi = np.pi
    ^
.\test_triaxial_ellipsoid.py:9:1: F401 'pytest.raises' imported but unused
from pytest import raises
^
.\triaxial_ellipsoid.py:9:1: F401 'fatiando.constants.G' imported but unused
from fatiando.constants import SI2MGAL, G, CM, T2NT, SI2EOTVOS, PERM_FREE_SPACE
^
.\triaxial_ellipsoid.py:9:1: F401 'fatiando.constants.PERM_FREE_SPACE' imported but unused
from fatiando.constants import SI2MGAL, G, CM, T2NT, SI2EOTVOS, PERM_FREE_SPACE
^
.\triaxial_ellipsoid.py:9:1: F401 'fatiando.constants.SI2MGAL' imported but unused
from fatiando.constants import SI2MGAL, G, CM, T2NT, SI2EOTVOS, PERM_FREE_SPACE
^
.\triaxial_ellipsoid.py:9:1: F401 'fatiando.constants.SI2EOTVOS' imported but unused
from fatiando.constants import SI2MGAL, G, CM, T2NT, SI2EOTVOS, PERM_FREE_SPACE
^
